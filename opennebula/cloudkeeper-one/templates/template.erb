<% pure_name = name[0..name.index('@')-1] %>
<% bio_type = pure_name.split('-').last.downcase %>
NAME = "<%= name %>"
CONTEXT = [
  BIO_TYPE = "<%= bio_type %>",
  <% unless bio_type == 'nfs' %>
  BIO_IMAGE = "misenko/bio-class-<%= pure_name.split('-')[1].split('_').reject { |word| word.length <= 3 }.map { |word| word[0].downcase }.join %>",
  <% end %>
  EMAIL = "$USER[EMAIL]",
  PUBLIC_IP = "$NIC[IP]",
  SSH_KEY = "$USER[SSH_KEY]",
  TOKEN = "YES",
  USER_DATA = "#cloud-config
# see https://help.ubuntu.com/community/CloudInit

bootcmd:
- test -L /etc/motd && unlink /etc/motd || /bin/true

runcmd:
- unlink /etc/nologin || /bin/true
- curl -s http://${SALT_MASTER_PRIVATE_IP_ADDRESS}/minion/contextualization.sh | bash -s

mounts:
- [vdb,none,swap,sw,0,0]
<% if bio_type == 'nfs' %>
- [vdc,/nfs,auto,defaults,0,2]
<% end %>

write_files:
- path: /etc/nologin
  content: |2

      *** Initial configuration by cloud-init is in progress. Please wait. ***
- path: /etc/motd
  content: |2
                                   cccccccc
                                 ::       :::
                               :c            c:
                               c              c::
                           ::::c:             :  :::
               :::::::::::c:     :                :c:::::::::::
             :::          :                      ::            :::
            c:   __  __      _         ____ _                 _  :c
       :::::c:  |  \/  | ___| |_ __ _ / ___| | ___  _   _  __| |   c
     :::        | |\/| |/ _ \ __/ _` | |   | |/ _ \| | | |/ _` |  :::::::
    c           | |  | |  __/ || (_| | |___| | (_) | |_| | (_| |        ::
    c           |_|  |_|\___|\__\__,_|\____|_|\___/ \__,_|\__,_|         c
     :::                                                          :     c:
        ::::c:               cloud@metacentrum.cz      :        :cc:::::
              :::c                                    :c:::::::::
                 ::::::::::            ::          :::
                          :::::      :::::::::::::::
                              ccccccc:

# sysadmin's master access key
ssh_authorized_keys:
- ssh-dss AAAAB3NzaC1kc3MAAACBAJIwhyfTXj6LeaF5adEINIsRawjlYE8vi1rHK9lb3fC0J+58NSL7mRx5zX0r+HPfnyYptciIG9uh0s7RRRu5c6MHPU5L4Vh7CrAT9SkKg7XmdkfNC6k6a6Dpq2hntwEUjxHvaNbuQA+FtiMEYT3M1/RBR6TdvmEFN2FMcHox5L3zAAAAFQC7Uu5YO5vIVRF80LJ2i7TAqYR3FwAAAIB3ioZ1nxwhYatpdIIaLbK8Za+fFzYT3sObea2jzEItGHVK/smyA4CcMw+54clCx726+0DF9nRnoQUWsh0hYGGdo3s5aPMksX+pqE+w0Nv94osVc+3RkixUjPiNnTLWYcZ/o228Du+FpN1o7AtoGYoQgnL/ZDCwyLWJSApdoAJu0AAAAIAIMihuKkNKHPvgVzJNAAtX+10LH7EAA/iY1wBnotLZ+e1doOCOcqnYw/ULJfBYWx9vMle4cPg8o7yioDn/SfO+GUwQNkr2Z1XkmLwmdWVdCeLgbor2hswyZmS7jF8CvdwMHxKD8ve/RrHkyBUkVxiUUnYT8MmInouPGfdmgR5Wow== cloud-support@metacentrum.cz

power_state:
  mode: reboot
  message: Initial configuration done by cloud-init, forcing reboot to apply changes.

",
  USER_TOKEN = "$USER[TOKEN_PASSWORD]",
  VM_GID = "$GID",
  VM_GNAME = "$GNAME",
  VM_ID = "$VMID",
  VM_UID = "$UID",
  VM_UNAME = "$UNAME" ]
CPU = "4"
<% if appliance.description %>
DESCRIPTION = "<%= appliance.description %>"
<% else %>
DESCRIPTION = "<%= appliance.title %>"
<% end %>
DISK = [
  DEV_PREFIX = "vd",
IMAGE_ID = "<%= image_id %>",
SIZE = "${OPENNEBULA_BASE_IMAGE_SIZE}" ]
DISK = [
  DEV_PREFIX = "vd",
  IMAGE_ID = "${OPENNEBULA_SWAP_IMAGE_ID}" ]
<% if bio_type == 'nfs' %>
DISK = [
  DEV_PREFIX = "vd",
  IMAGE_ID = "${OPENNEBULA_NFS_IMAGE_ID}"]
<% end %>
FEATURES = [
  GUEST_AGENT = "yes" ]
GRAPHICS = [
  LISTEN = "0.0.0.0",
  RANDOM_PASSWD = "YES",
  TYPE = "VNC" ]
LOGO = "images/logos/<%= appliance.operating_system.split(' ')[1].downcase %>.png"
MEMORY = "${OPENNEBULA_MEMORY}"
NIC = [
<% if bio_type == 'student' %>
  NETWORK_ID = "${OPENNEBULA_PUBLIC_STUDENT_NETWORK_ID}",
<% elsif bio_type == 'teacher' %>
  NETWORK_ID = "${OPENNEBULA_PUBLIC_TEACHER_NETWORK_ID}",
<% else %>
  NETWORK_ID = "${OPENNEBULA_PUBLIC_NFS_NETWORK_ID}",
<% end %>
  SECURITY_GROUPS = "${OPENNEBULA_PUBLIC_NETWORK_SECURITY_GROUPS}" ]
NIC = [
  NETWORK_ID = "${OPENNEBULA_PRIVATE_NETWORK_ID}",
  SECURITY_GROUPS = "${OPENNEBULA_PRIVATE_NETWORK_SECURITY_GROUPS}" ]
OS = [
  ARCH = "x86_64" ]
RAW = [
  DATA = "<!-- RAW data follows: --><cpu mode='host-model'></cpu> <devices><serial type='pty'><target port='0'/></serial><console type='pty'><target type='serial' port='0'/></console></devices>",
  TYPE = "kvm" ]
SCHED_REQUIREMENTS = "(HYPERVISOR=\"kvm\") & (CLUSTER_ID=${OPENNEBULA_DEPLOY_CLUSTER_ID})"
VCPU = "${OPENNEBULA_CPU}"
